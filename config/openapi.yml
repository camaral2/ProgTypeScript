# Online Editor version - https://editor.swagger.io/
#----------
openapi: 3.0.3
info:
  title: Backend API
  description: Backend API for a new Job 
  termsOfService: http://swagger.io/terms/
  contact:
    email: cristian_amaral@hotmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /api/v1
 
tags:
  - name: progTypeScript
    description: progTypeScript APIs
  - name: user
    description: User API
 
paths:
  /test:
    get:
      description: Return 'Hi <name> - I'm Fine !!!'
      tags: 
        - progTypeScript
      operationId: test
      parameters:
      - name: name
        required: false
        in: query
        description: A name of test result
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
 
  /logout:
    get:
      description: 'Finalized your session \<name\>'
      tags:
        - progTypeScript
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        200:
          description: Success in this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
  /user:
    post:
      summary: Create User
      tags: 
        - user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - userId
                properties:
                  userId:
                    type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    DefaultResponse:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        message:
          type: string
    FailResponse:
      type: object
      additionalProperties: false
      required:
        - success
        - error
      properties:
        success:
          type: boolean
        error:
          type: string